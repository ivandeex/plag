---
- name: setup honcho environment
  hosts: devel
  tags: environ
  gather_facts: true

  tasks:
    - name: add settings to .env
      lineinfile: dest={{source_dir}}/.env create=yes mode=0600
                  regexp='^{{ item|upper }}='
                  line='{{ item|upper }}="{{ settings[item] }}"'
      with_items: '{{ settings.keys() | sort }}'


- name: o/s packages
  hosts: devel
  tags: ospackages
  become: false
  gather_facts: true

  tasks:
    - setup:

    - name: install required o/s packages
      when: ansible_distribution == 'Ubuntu'
      become: true
      apt: pkg={{item}}
      with_items:
        - python3
        - python3-psycopg2      # for ansible module 'postgresql_db'
        - build-essential       # for compiling python packages
        - libpython3-dev        # ditto
        - libffi-dev            # for python module 'cffi'
        - libxml2-dev           # for python module 'lxml'
        - libxslt1-dev          # ditto
        - libssl-dev            # for python module 'cryptography'
        - libjpeg-dev           # for python module 'pillow'
        - gettext               # for translations


- name: setup database
  hosts: devel
  tags: database
  become: true
  become_user: postgres
  gather_facts: false

  tasks:
    - name: create django database
      postgresql_db: port={{postgres.port}} name={{postgres.database}}
                     template='template0' encoding='UTF-8'
                     lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8'

    - name: create database user
      postgresql_user: port={{postgres.port}} db={{postgres.database}}
                       name={{postgres.username}} password={{postgres.password}}

    # We do not let django tests create/drop test database for security reasons.
    # The test database is created below:
    - name: create test database
      postgresql_db: port={{postgres.port}} name=test_{{postgres.database}}
                     owner={{postgres.username}}
                     template='template0' encoding='UTF-8'
                     lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8'


- name: pip packages
  hosts: devel
  tags: packages
  gather_facts: true

  tasks:
    - name: install pip packages
      pip: virtualenv={{virtenv_dir}}
           requirements={{source_dir}}/requirements/devel.pip


- name: configure nginx
  hosts: devel
  tags: nginx
  become: true
  gather_facts: false

  tasks:
    - name: nginx location
      template: src=../templates/nginx.conf.j2
                dest="{{nginx_site_dir}}/{{project_name}}.conf"
      notify: restart nginx

  handlers:
    - name: restart nginx
      become: true
      service: name=nginx state=restarted
...
